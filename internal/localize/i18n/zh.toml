[help]
  [help.usage]
    text = """
f2 标志 [选项] [文件和目录路径...]
  命令 | f2 标志 [选项]"""

    heading = "用法"
  [help.positional_args]
    heading = "位置参数"

    text = """
可选地提供一个或多个文件和目录以搜索匹配项。
    如果省略，则仅搜索当前目录。请注意，
    除非使用 --recursive/-R，否则不会递归搜索目录。"""

  [help.options]
    heading = "选项"

  [help.short]
    text = """
一款您会真正喜欢使用的批量重命名工具。

{{.Usage}}
  {{.UsageText}}

{{.Examples}}
  $ f2 -f 'jpeg' -r 'jpg'
  $ f2 -r '{id3.artist}/{id3.album}/${1}_{id3.title}{ext}'

{{.LearnMore}}
  使用 f2 --help 查看命令行选项。
  请在 https://f2.freshman.tech 阅读手册"""

  [help.learn_more]
    heading = "了解更多"

    text = "请在 https://f2.freshman.tech 阅读手册"
  [help.env]
    heading = "环境变量"

    text = """
根据您的偏好覆盖默认选项。例如，
    您可以默认启用执行模式并忽略文件扩展名：

    export F2_DEFAULT_OPTS=--exec --ignore-ext"""

  [help.color]
    text = "设置为任意值可禁用彩色输出。"

  [help.examples]
    heading = "示例"


[error]
  default_opts_parsing = "F2_DEFAULT_OPTS 错误：不支持的标志 '%s'"
  pipe_read            = "从管道读取时出错"
  invalid_submatches   = "子匹配项数量无效"
  exiftool_init        = "初始化 exiftool 失败: %w"
  invalid_argument            = "需要以下参数之一：-f, -r, --csv, 或 -u。运行 f2 --help 查看用法"
  invalid_sort                = "提供的排序方式 '%s' 无效"
  invalid_sort_variable       = "提供的排序变量 '%s' 无效"
  invalid_target_dir          = "目标路径 '%s' 存在但不是目录"
  parsing_fix_conflicts_pattern = "提供的 --fix-conflicts-pattern '%s' 无效"
  rename_failed = "部分文件无法重命名"
  eval_invalid_args = "无效参数"

[flag]
  heading = "标志"

  [flag.csv]
    usage = """

    加载 CSV 文件，并根据其内容进行重命名。"""

  [flag.find]
    usage = """

    用于匹配文件和目录的正则表达式模式。
    它接受 RE2 标准定义的语法，如果省略则默认为 .*，
      匹配整个文件/目录名。

      当使用 -s/--string-mode 时，此模式被视为文字字符串。"""
  [flag.replace]
    usage = """

    替换字符串，用于替换文件名中的每个匹配项。
    它支持捕获变量、内置变量和 exiftool 变量。
    如果省略，则默认为空字符串。"""
  [flag.undo]
    usage = """

    撤销在当前工作目录中执行的最后一次重命名操作。"""
  [flag.allowOverwrites]
    usage = """

        允许重命名操作覆盖现有文件。
        注意：使用此选项可能导致不可恢复的数据丢失。"""
  [flag.clean]
    usage = """

    清理在重命名操作中遍历过的空目录。"""
  [flag.exclude]
    usage = """

        排除与提供的正则表达式匹配的文件和目录。
        此标志可以重复使用以指定多个排除模式。

        示例:
            -E 'json' -E 'yml' (过滤掉 JSON 和 YAML 文件)
            -E 'json|yaml' (与上述等效)

        注意:
            这不会阻止递归进入匹配的目录 (请改用
            --exclude-dir)。"""
  [flag.excludeDir]
    usage = """

        阻止 F2 递归进入与提供的正则表达式模式
        匹配的目录。"""
  [flag.exec]
    usage = """

    执行重命名操作并将更改应用于文件系统。"""
  [flag.exiftoolOpts]
    usage = """

        在使用 ExifTool 变量替换模式时，提供自定义
        Exiftool 输出的选项。

        支持的选项:
            --api
            --charset
            --coordFormat
            --dateFormat
            --extractEmbedded

        示例:
            $ f2 -r '{xt.GPSDateTime}' --exiftool-opts '--dateFormat %Y-%m-%d' """
  [flag.fixConflicts]
    usage = """

    使用预定义规则自动修复重命名冲突。"""
  [flag.fixConflictsPattern]
    usage = """

        指定在发生冲突时用于重命名文件的自定义模式。
        该模式应为有效的 Go 格式字符串，包含一个用于冲突索引
        的 '%d' 占位符。

        示例: '_%02d'  (生成 _01, _02, 等)

        如果未指定，则使用默认模式 '(%d)'。"""
  [flag.hidden]
    usage = """

        在搜索和重命名过程中包括隐藏的文件和目录。

        在 Linux 和 macOS 上，隐藏文件是那些以点字符开头的文件。
        在 Windows 上，只有具有“隐藏”属性的文件才被视为隐藏文件。

        要同时匹配隐藏目录，请将此标志与 -d/--include-dir 标志结合使用。"""
  [flag.include]
    usage = """

        仅包括与提供的正则表达式匹配的文件，而不是
        所有由 --find 标志匹配的文件。

        此标志可以重复使用以指定多个包含模式。

        示例:
            -I 'json' -I 'yml' (仅包括 JSON 和 YAML 文件)"""
  [flag.includeDir]
    usage = """

        在重命名操作中包括匹配的目录 (默认情况下它们
        被排除)。"""
  [flag.ignoreCase]
    usage = """

    搜索匹配项时忽略大小写。"""
  [flag.ignoreExt]
    usage = """

    搜索匹配项时忽略文件扩展名。"""
  [flag.json]
    usage = """

        生成 JSON 输出，但错误消息会发送到
        标准错误流。"""
  [flag.maxDepth]
    usage = """

    限制递归搜索的深度。设置为 0 (默认) 表示无限制。"""
  [flag.noColor]
    usage = """

    禁用彩色输出。"""
  [flag.onlyDir]
    usage = """

    仅重命名目录，不重命名文件 (意味着 -d/--include-dir)。"""
  [flag.pair]
    usage = """

        启用配对重命名，将同一目录中同名但扩展名不同的
        文件重命名为相同的新名称。在配对模式下，
        文件扩展名将被忽略。

        示例:
            之前: DSC08533.ARW DSC08533.JPG DSC08534.ARW DSC08534.JPG

            $ f2 -r "Photo_{%03d}" --pair -x

            之后: Photo_001.ARW Photo_001.JPG Photo_002.ARW Photo_002.JPG"""
  [flag.pairOrder]
    usage = """

        根据扩展名对配对文件进行排序。这有助于控制
        首先重命名哪个文件，以及在使用变量时应提取
        哪个文件的元数据。

        示例:
          --pair-order 'dng,jpg' # 在 jpg 之前重命名 dng 文件
          --pair-order 'xmp,arw' # 在 arw 之前重命名 xmp 文件"""
  [flag.quiet]
    usage = """

        不向标准输出 (stdout) 打印任何内容。如果未找到匹配项，
      且未使用此标志，f2 将以错误代码而不是正常的成功代码退出。
        错误将继续写入标准错误流 (stderr)。"""
  [flag.recursive]
    usage = """

    搜索匹配项时递归遍历目录。"""
  [flag.replaceLimit]
    usage = """

        限制对每个匹配文件进行的替换次数。0 (默认)
        表示替换所有匹配项。负值表示从文件名末尾
        开始替换。"""
  [flag.resetIndexPerDir]
    usage = """

        在递归操作期间进入新目录时重置
        自动递增索引。"""
  [flag.sort]
    usage = """

        根据提供的标准按升序对匹配项进行排序。

    允许的值:
      * 'default'    : 字典顺序。
      * 'size'       : 按文件大小排序。
      * 'natural'    : 按自然顺序排序。
      * 'mtime'      : 按文件最后修改时间排序。
      * 'btime'      : 按文件创建时间排序。
      * 'atime'      : 按文件最后访问时间排序。
      * 'ctime'      : 按文件元数据最后更改时间排序。
      * 'time_var'   : 按时间变量排序。
      * 'int_var'    : 按整数变量排序。
      * 'string_var' : 按字符串变量字典顺序排序。"""
  [flag.sortr]
    usage = """

    接受与 --sort 相同的值，但按降序对匹配项进行排序。"""
  [flag.sortPerDir]
    usage = """

    确保在每个目录内部分别执行排序，而不是全局排序。"""
  [flag.sortVar]
    usage = """

        在使用 --sort/--sortr 和 time_var, int_var, 或 string_var 时激活。
        提供支持的变量以根据文件元数据对文件进行排序。
        有关更多详细信息，请参阅 https://f2.freshman.tech/guide/sorting。"""
  [flag.stringMode]
    usage = """

        将搜索模式 (由 -f/--find 指定) 视为文字字符串
        而不是正则表达式。"""
  [flag.targetDir]
    usage = """

    指定一个目标目录，以移动重命名的文件并重新组织您的文件系统。"""
  [flag.verbose]
    usage = """

    在重命名操作期间启用详细输出。"""

[app]
  usage = """
f2 批量重命名文件和目录，根据指定的模式匹配文件。
它采用安全检查以防止意外覆盖，并提供多种选项
以对重命名过程进行精细控制。"""

[report]
  error = "错误"
  backup_failed = "备份失败"
  backup_cleanup_failed = "备份文件清理失败"
  search_eval_failed = "条件搜索失败"
  non_existent_file = "跳过行中不存在的源文件"
  no_matches = "搜索条件未匹配任何文件"
  no_matches_csv = "在 CSV 文件中未找到重命名候选项"
  no_matches_undo = "无可撤销的操作"
  dry_run = "模拟运行"
  commit_changes = "使用 -x/--exec 标志提交以上更改"
  renamed = "已重命名"
  default_opt = "已从环境应用默认选项 '--%s': %s"

[status]
  ok                         = "成功"
  unchanged                  = "未更改"
  overwriting                = "覆盖中"
  empty_filename             = "文件名为空"
  trailing_periods_present   = "存在结尾句点"
  target_exists              = "目标已存在"
  overwriting_new_path       = "正在覆盖新路径"
  forbidden_characters_present = "存在禁用字符"
  filename_too_long          = "文件名过长"
  source_already_renamed     = "源文件已重命名"
  source_not_found           = "未找到源文件"
  ignored                    = "已忽略"

[table]
  original = "原始"
  renamed = "重命名后"
  status = "状态"
